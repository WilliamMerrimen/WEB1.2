version: '3.8'

services:
  # Frontend - веб-страница портфолио
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: portfolio-frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - portfolio-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend - API для комментариев
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: portfolio-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=database
      - DB_USER=portfolio_user
      - DB_PASSWORD=portfolio_password
      - DB_NAME=portfolio_db
    depends_on:
      database:
        condition: service_healthy
    networks:
      - portfolio-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"

  # Database - MySQL для хранения комментариев
  database:
    image: mysql:8.0
    container_name: portfolio-database
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=portfolio_db
      - MYSQL_USER=portfolio_user
      - MYSQL_PASSWORD=portfolio_password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "portfolio_user", "-pportfolio_password"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # Adminer - веб-интерфейс для управления БД (опционально)
  adminer:
    image: adminer:latest
    container_name: portfolio-adminer
    ports:
      - "8081:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=database
    depends_on:
      - database
    networks:
      - portfolio-network
    restart: unless-stopped

  # Redis - кэш для комментариев (опционально)
  redis:
    image: redis:7-alpine
    container_name: portfolio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    command: redis-server --appendonly yes --requirepass redis_password

# Именованные тома для постоянного хранения данных
volumes:
  db_data:
    driver: local
    labels:
      - "backup.enable=true"
  redis_data:
    driver: local
  logs:
    driver: local

# Сетевая конфигурация
networks:
  portfolio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    labels:
      - "project=portfolio"
      - "environment=development"